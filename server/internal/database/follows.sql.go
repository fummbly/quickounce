// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: follows.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createFollow = `-- name: CreateFollow :one
INSERT INTO follows(follow_id, followee_id, created_at)
VALUES (
	$1,
	$2,
	NOW()
)RETURNING follow_id, followee_id, created_at
`

type CreateFollowParams struct {
	FollowID   uuid.UUID
	FolloweeID uuid.UUID
}

func (q *Queries) CreateFollow(ctx context.Context, arg CreateFollowParams) (Follow, error) {
	row := q.db.QueryRowContext(ctx, createFollow, arg.FollowID, arg.FolloweeID)
	var i Follow
	err := row.Scan(&i.FollowID, &i.FolloweeID, &i.CreatedAt)
	return i, err
}

const deleteFollow = `-- name: DeleteFollow :exec
DELETE FROM follows
WHERE $1 = follow_id AND $2 = followee_id
`

type DeleteFollowParams struct {
	FollowID   uuid.UUID
	FolloweeID uuid.UUID
}

func (q *Queries) DeleteFollow(ctx context.Context, arg DeleteFollowParams) error {
	_, err := q.db.ExecContext(ctx, deleteFollow, arg.FollowID, arg.FolloweeID)
	return err
}
